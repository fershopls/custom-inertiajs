{"version":3,"file":"index.js","sources":["../src/modal.ts","../src/types.ts","../src/debounce.ts","../src/formData.ts","../src/url.ts","../src/events.ts","../src/router.ts","../src/files.ts","../src/head.ts","../src/index.ts","../src/shouldIntercept.ts"],"sourcesContent":["export default {\r\n  modal: null,\r\n  listener: null,\r\n\r\n  show(html: Record<string, unknown>|string): void {\r\n    if (typeof html === 'object') {\r\n      html = `All Inertia requests must receive a valid Inertia response, however a plain JSON response was received.<hr>${JSON.stringify(html)}`\r\n    }\r\n\r\n    const page = document.createElement('html')\r\n    page.innerHTML = html\r\n    page.querySelectorAll('a').forEach(a => a.setAttribute('target', '_top'))\r\n\r\n    this.modal = document.createElement('div')\r\n    this.modal.style.position = 'fixed'\r\n    this.modal.style.width = '100vw'\r\n    this.modal.style.height = '100vh'\r\n    this.modal.style.padding = '50px'\r\n    this.modal.style.boxSizing = 'border-box'\r\n    this.modal.style.backgroundColor = 'rgba(0, 0, 0, .6)'\r\n    this.modal.style.zIndex = 200000\r\n    this.modal.addEventListener('click', () => this.hide())\r\n\r\n    const iframe = document.createElement('iframe')\r\n    iframe.style.backgroundColor = 'white'\r\n    iframe.style.borderRadius = '5px'\r\n    iframe.style.width = '100%'\r\n    iframe.style.height = '100%'\r\n    this.modal.appendChild(iframe)\r\n\r\n    document.body.prepend(this.modal)\r\n    document.body.style.overflow = 'hidden'\r\n    if (!iframe.contentWindow) {\r\n      throw new Error('iframe not yet ready.')\r\n    }\r\n    iframe.contentWindow.document.open()\r\n    iframe.contentWindow.document.write(page.outerHTML)\r\n    iframe.contentWindow.document.close()\r\n\r\n    this.listener = this.hideOnEscape.bind(this)\r\n    document.addEventListener('keydown', this.listener)\r\n  },\r\n\r\n  hide(): void {\r\n    this.modal.outerHTML = ''\r\n    this.modal = null\r\n    document.body.style.overflow = 'visible'\r\n    document.removeEventListener('keydown', this.listener)\r\n  },\r\n\r\n  hideOnEscape(event: KeyboardEvent): void {\r\n    if (event.keyCode === 27) {\r\n      this.hide()\r\n    }\r\n  },\r\n}\r\n","import { AxiosResponse, CancelTokenSource } from 'axios'\r\n\r\nexport type Errors = Record<string, string>\r\nexport type ErrorBag = Record<string, Errors>\r\n\r\nexport type FormDataConvertible = Array<FormDataConvertible>|Blob|FormDataEntryValue|Date|boolean|number|null\r\n\r\nexport enum Method {\r\n  GET = 'get',\r\n  POST = 'post',\r\n  PUT = 'put',\r\n  PATCH = 'patch',\r\n  DELETE = 'delete',\r\n}\r\n\r\nexport type RequestPayload = Record<string, FormDataConvertible>|FormData\r\n\r\nexport interface PageProps {\r\n  [key: string]: unknown\r\n}\r\n\r\nexport interface Page<SharedProps = PageProps> {\r\n  component: string,\r\n  props: PageProps & SharedProps & {\r\n    errors: Errors & ErrorBag;\r\n  }\r\n  url: string,\r\n  version: string|null\r\n\r\n  // Refactor away\r\n  scrollRegions: Array<{ top: number, left: number }>\r\n  rememberedState: Record<string, unknown>\r\n  resolvedErrors: Errors\r\n}\r\n\r\nexport type PageResolver = (name: string) => Component\r\n\r\nexport type PageHandler = ({\r\n  component,\r\n  page,\r\n  preserveState,\r\n}: {\r\n  component: Component,\r\n  page: Page,\r\n  preserveState: PreserveStateOption,\r\n}) => Promise<unknown>\r\n\r\nexport type PreserveStateOption = boolean|string|((page: Page) => boolean)\r\n\r\nexport type Progress = ProgressEvent & { percentage: number }\r\n\r\nexport type LocationVisit = {\r\n  preserveScroll: boolean,\r\n}\r\n\r\nexport type Visit = {\r\n  method: Method,\r\n  data: RequestPayload,\r\n  replace: boolean,\r\n  preserveScroll: PreserveStateOption,\r\n  preserveState: PreserveStateOption,\r\n  only: Array<string>,\r\n  headers: Record<string, string>\r\n  errorBag: string|null,\r\n  forceFormData: boolean,\r\n  queryStringArrayFormat: 'indices'|'brackets',\r\n}\r\n\r\nexport type GlobalEventsMap = {\r\n  before: {\r\n    parameters: [PendingVisit],\r\n    details: {\r\n      visit: PendingVisit,\r\n    },\r\n    result: boolean|void,\r\n  },\r\n  start: {\r\n    parameters: [PendingVisit],\r\n    details: {\r\n      visit: PendingVisit,\r\n    },\r\n    result: void,\r\n  },\r\n  progress: {\r\n    parameters: [Progress|undefined],\r\n    details: {\r\n      progress: Progress|undefined,\r\n    },\r\n    result: void,\r\n  },\r\n  finish: {\r\n    parameters: [ActiveVisit],\r\n    details: {\r\n      visit: ActiveVisit,\r\n    },\r\n    result: void,\r\n  },\r\n  cancel: {\r\n    parameters: [],\r\n    details: {\r\n    },\r\n    result: void,\r\n  },\r\n  navigate: {\r\n    parameters: [Page],\r\n    details: {\r\n        page: Page\r\n    },\r\n    result: void,\r\n  },\r\n  success: {\r\n    parameters: [Page],\r\n    details: {\r\n        page: Page\r\n    },\r\n    result: void,\r\n  },\r\n  error: {\r\n    parameters: [Errors],\r\n    details: {\r\n        errors: Errors\r\n    },\r\n    result: void,\r\n  },\r\n  invalid: {\r\n    parameters: [AxiosResponse],\r\n    details: {\r\n        response: AxiosResponse\r\n    },\r\n    result: boolean|void,\r\n  },\r\n  exception: {\r\n    parameters: [Error],\r\n    details: {\r\n        exception: Error\r\n    },\r\n    result: boolean|void,\r\n  },\r\n}\r\n\r\nexport type GlobalEventNames = keyof GlobalEventsMap\r\n\r\nexport type GlobalEvent<TEventName extends GlobalEventNames> = CustomEvent<GlobalEventDetails<TEventName>>\r\n\r\nexport type GlobalEventParameters<TEventName extends GlobalEventNames> = GlobalEventsMap[TEventName]['parameters']\r\n\r\nexport type GlobalEventResult<TEventName extends GlobalEventNames> = GlobalEventsMap[TEventName]['result']\r\n\r\nexport type GlobalEventDetails<TEventName extends GlobalEventNames> = GlobalEventsMap[TEventName]['details']\r\n\r\nexport type GlobalEventTrigger<TEventName extends GlobalEventNames> = (...params: GlobalEventParameters<TEventName>) => GlobalEventResult<TEventName>\r\n\r\nexport type GlobalEventCallback<TEventName extends GlobalEventNames> = (...params: GlobalEventParameters<TEventName>) => GlobalEventResult<TEventName>\r\n\r\nexport type VisitParams = Partial<Visit & {\r\n  onCancelToken: { ({ cancel }: { cancel: VoidFunction }): void },\r\n  onBefore: GlobalEventCallback<'before'>,\r\n  onStart: GlobalEventCallback<'start'>,\r\n  onProgress: GlobalEventCallback<'progress'>,\r\n  onFinish: GlobalEventCallback<'finish'>,\r\n  onCancel: GlobalEventCallback<'cancel'>,\r\n  onSuccess: GlobalEventCallback<'success'>,\r\n  onError: GlobalEventCallback<'error'>,\r\n}>\r\n\r\nexport type VisitOptions = (options: Required<VisitParams>, url: URL) => Required<VisitParams>|void;\r\n\r\nexport type PendingVisit = Visit & {\r\n  url: URL,\r\n  completed: boolean,\r\n  cancelled: boolean,\r\n  interrupted: boolean,\r\n};\r\n\r\nexport type ActiveVisit = PendingVisit & Required<VisitParams> & {\r\n  cancelToken: CancelTokenSource,\r\n}\r\n\r\nexport type VisitId = unknown\r\nexport type Component = unknown\r\n\r\nexport type InertiaAppResponse = Promise<{ head: string[], body: string } | void>\r\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport default function debounce<F extends (...params: any[]) => ReturnType<F>>(fn: F, delay: number): F {\r\n  let timeoutID: NodeJS.Timeout\r\n  return function (...args: unknown[]) {\r\n    clearTimeout(timeoutID)\r\n    timeoutID = setTimeout(() => fn.apply(this, args), delay)\r\n  } as F\r\n}\r\n","import { FormDataConvertible } from './types'\r\n\r\nexport function objectToFormData(\r\n  source: Record<string, FormDataConvertible>,\r\n  form: FormData = new FormData(),\r\n  parentKey: string|null = null,\r\n): FormData {\r\n  source = source || {}\r\n\r\n  for (const key in source) {\r\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n      append(form, composeKey(parentKey, key), source[key])\r\n    }\r\n  }\r\n\r\n  return form\r\n}\r\n\r\nfunction composeKey(parent: string|null, key: string): string {\r\n  return parent ? parent + '[' + key + ']' : key\r\n}\r\n\r\nfunction append(form: FormData, key: string, value: FormDataConvertible): void {\r\n  if (Array.isArray(value)) {\r\n    return Array.from(value.keys()).forEach(index => append(form, composeKey(key, index.toString()), value[index]))\r\n  } else if (value instanceof Date) {\r\n    return form.append(key, value.toISOString())\r\n  } else if (value instanceof File) {\r\n    return form.append(key, value, value.name)\r\n  } else if (value instanceof Blob) {\r\n    return form.append(key, value)\r\n  } else if (typeof value === 'boolean') {\r\n    return form.append(key, value ? '1' : '0')\r\n  } else if (typeof value === 'string') {\r\n    return form.append(key, value)\r\n  } else if (typeof value === 'number') {\r\n    return form.append(key, `${value}`)\r\n  } else if (value === null || value === undefined) {\r\n    return form.append(key, '')\r\n  }\r\n\r\n  objectToFormData(value, form, key)\r\n}\r\n","import * as qs from 'qs'\r\nimport deepmerge from 'deepmerge'\r\nimport { FormDataConvertible, Method } from './types'\r\n\r\nexport function hrefToUrl(href: string|URL): URL {\r\n  return new URL(href.toString(), window.location.toString())\r\n}\r\n\r\nexport function mergeDataIntoQueryString(\r\n  method: Method,\r\n  href: URL|string,\r\n  data: Record<string, FormDataConvertible>,\r\n  qsArrayFormat: 'indices'|'brackets' = 'brackets',\r\n): [string, Record<string, FormDataConvertible>] {\r\n  const hasHost = /^https?:\\/\\//.test(href.toString())\r\n  const hasAbsolutePath = hasHost || href.toString().startsWith('/')\r\n  const hasRelativePath = !hasAbsolutePath && !href.toString().startsWith('#') && !href.toString().startsWith('?')\r\n  const hasSearch = href.toString().includes('?') || (method === Method.GET && Object.keys(data).length)\r\n  const hasHash = href.toString().includes('#')\r\n\r\n  const url = new URL(href.toString(), 'http://localhost')\r\n\r\n  if (method === Method.GET && Object.keys(data).length) {\r\n    url.search = qs.stringify(deepmerge(qs.parse(url.search, { ignoreQueryPrefix: true }), data), {\r\n      encodeValuesOnly: true,\r\n      arrayFormat: qsArrayFormat,\r\n    })\r\n    data = {}\r\n  }\r\n\r\n  return [\r\n    [\r\n      hasHost ? `${url.protocol}//${url.host}` : '',\r\n      hasAbsolutePath ? url.pathname : '',\r\n      hasRelativePath ? url.pathname.substring(1) : '',\r\n      hasSearch ? url.search : '',\r\n      hasHash ? url.hash : '',\r\n    ].join(''),\r\n    data,\r\n  ]\r\n}\r\n\r\nexport function urlWithoutHash(url: URL|Location): URL {\r\n  url = new URL(url.href)\r\n  url.hash = ''\r\n  return url\r\n}\r\n","import { GlobalEventDetails, GlobalEventNames, GlobalEventTrigger } from './types'\r\n\r\nfunction fireEvent<TEventName extends GlobalEventNames>(name: TEventName, options: CustomEventInit<GlobalEventDetails<TEventName>>): boolean {\r\n  return document.dispatchEvent(new CustomEvent(`inertia:${name}`, options))\r\n}\r\n\r\nexport const fireBeforeEvent: GlobalEventTrigger<'before'> = (visit) => {\r\n  return fireEvent('before', { cancelable: true, detail: { visit } })\r\n}\r\n\r\nexport const fireErrorEvent: GlobalEventTrigger<'error'> = (errors) => {\r\n  return fireEvent('error', { detail: { errors } })\r\n}\r\n\r\nexport const fireExceptionEvent: GlobalEventTrigger<'exception'> = (exception) => {\r\n  return fireEvent('exception', { cancelable: true, detail: { exception } })\r\n}\r\n\r\nexport const fireFinishEvent: GlobalEventTrigger<'finish'> = (visit) => {\r\n  return fireEvent('finish', { detail: { visit } })\r\n}\r\n\r\nexport const fireInvalidEvent: GlobalEventTrigger<'invalid'> = (response) => {\r\n  return fireEvent('invalid', { cancelable: true, detail: { response } })\r\n}\r\n\r\nexport const fireNavigateEvent: GlobalEventTrigger<'navigate'> = (page) => {\r\n  return fireEvent('navigate', { detail: { page } })\r\n}\r\n\r\nexport const fireProgressEvent: GlobalEventTrigger<'progress'> = (progress) => {\r\n  return fireEvent('progress', { detail: { progress } })\r\n}\r\n\r\nexport const fireStartEvent: GlobalEventTrigger<'start'> = (visit) => {\r\n  return fireEvent('start', { detail: { visit } })\r\n}\r\n\r\nexport const fireSuccessEvent: GlobalEventTrigger<'success'> = (page) => {\r\n  return fireEvent('success', { detail: { page } })\r\n}\r\n","import modal from './modal'\r\nimport debounce from './debounce'\r\nimport { hasFiles } from './files'\r\nimport { objectToFormData } from './formData'\r\nimport { AxiosStatic, AxiosResponse } from 'axios'\r\nimport { hrefToUrl, mergeDataIntoQueryString, urlWithoutHash } from './url'\r\nimport { ActiveVisit, GlobalEvent, GlobalEventNames, GlobalEventResult, LocationVisit, Method, Page, PageHandler, PageResolver, PendingVisit, PreserveStateOption, RequestPayload, VisitId, VisitParams, VisitOptions } from './types'\r\nimport { fireBeforeEvent, fireErrorEvent, fireExceptionEvent, fireFinishEvent, fireInvalidEvent, fireNavigateEvent, fireProgressEvent, fireStartEvent, fireSuccessEvent } from './events'\r\n\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    axios: AxiosStatic;\r\n  }\r\n}\r\n\r\n\r\nlet Axios: AxiosStatic = (window as any).axios;\r\n\r\nconst isServer = typeof window === 'undefined'\r\n\r\nexport class Router {\r\n  protected page!: Page\r\n  protected resolveComponent!: PageResolver\r\n  protected swapComponent!: PageHandler\r\n  protected visitOptions!: VisitOptions\r\n  protected activeVisit?: ActiveVisit\r\n  protected visitId: VisitId = null\r\n\r\n  public init({\r\n    initialPage,\r\n    resolveComponent,\r\n    swapComponent,\r\n    visitOptions,\r\n  }: {\r\n    initialPage: Page,\r\n    resolveComponent: PageResolver,\r\n    swapComponent: PageHandler,\r\n    visitOptions: VisitOptions,\r\n  }): void {\r\n    Axios = window.axios;\r\n\r\n    this.page = initialPage\r\n    this.resolveComponent = resolveComponent\r\n    this.swapComponent = swapComponent\r\n    this.visitOptions = visitOptions\r\n\r\n    if (this.isBackForwardVisit()) {\r\n      this.handleBackForwardVisit(this.page)\r\n    } else if (this.isLocationVisit()) {\r\n      this.handleLocationVisit(this.page)\r\n    } else {\r\n      this.handleInitialPageVisit(this.page)\r\n    }\r\n\r\n    this.setupEventListeners()\r\n  }\r\n\r\n  protected handleInitialPageVisit(page: Page): void {\r\n    this.page.url += window.location.hash\r\n    this.setPage(page, { preserveState: true }).then(() => fireNavigateEvent(page))\r\n  }\r\n\r\n  protected setupEventListeners(): void {\r\n    window.addEventListener('popstate', this.handlePopstateEvent.bind(this))\r\n    document.addEventListener('scroll', debounce(this.handleScrollEvent.bind(this), 100), true)\r\n  }\r\n\r\n  protected scrollRegions(): NodeListOf<Element> {\r\n    return document.querySelectorAll('[scroll-region]')\r\n  }\r\n\r\n  protected handleScrollEvent(event: Event): void {\r\n    if (typeof (event.target as Element).hasAttribute === 'function' && (event.target as Element).hasAttribute('scroll-region')) {\r\n      this.saveScrollPositions()\r\n    }\r\n  }\r\n\r\n  protected saveScrollPositions(): void {\r\n    this.replaceState({\r\n      ...this.page,\r\n      scrollRegions: Array.from(this.scrollRegions()).map(region => {\r\n        return {\r\n          top: region.scrollTop,\r\n          left: region.scrollLeft,\r\n        }\r\n      }),\r\n    })\r\n  }\r\n\r\n  protected resetScrollPositions(): void {\r\n    document.documentElement.scrollTop = 0\r\n    document.documentElement.scrollLeft = 0\r\n    this.scrollRegions().forEach(region => {\r\n      region.scrollTop = 0\r\n      region.scrollLeft = 0\r\n    })\r\n    this.saveScrollPositions()\r\n    if (window.location.hash) {\r\n      document.getElementById(window.location.hash.slice(1))?.scrollIntoView()\r\n    }\r\n  }\r\n\r\n  protected restoreScrollPositions(): void {\r\n    if (this.page.scrollRegions) {\r\n      this.scrollRegions().forEach((region: Element, index: number) => {\r\n        const scrollPosition = this.page.scrollRegions[index]\r\n        if (scrollPosition) {\r\n          region.scrollTop = scrollPosition.top\r\n          region.scrollLeft = scrollPosition.left\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  protected isBackForwardVisit(): boolean {\r\n    return window.history.state\r\n        && window.performance\r\n        && window.performance.getEntriesByType('navigation').length > 0\r\n        && (window.performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming).type === 'back_forward'\r\n  }\r\n\r\n  protected handleBackForwardVisit(page: Page): void {\r\n    window.history.state.version = page.version\r\n    this.setPage(window.history.state, { preserveScroll: true, preserveState: true }).then(() => {\r\n      this.restoreScrollPositions()\r\n      fireNavigateEvent(page)\r\n    })\r\n  }\r\n\r\n  protected locationVisit(url: URL, preserveScroll: LocationVisit['preserveScroll']): boolean|void {\r\n    try {\r\n      const locationVisit: LocationVisit = { preserveScroll }\r\n      window.sessionStorage.setItem('inertiaLocationVisit', JSON.stringify(locationVisit))\r\n      window.location.href = url.href\r\n      if (urlWithoutHash(window.location).href === urlWithoutHash(url).href) {\r\n        window.location.reload()\r\n      }\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  protected isLocationVisit(): boolean {\r\n    try {\r\n      return window.sessionStorage.getItem('inertiaLocationVisit') !== null\r\n    } catch (error) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  protected handleLocationVisit(page: Page): void {\r\n    const locationVisit: LocationVisit = JSON.parse(window.sessionStorage.getItem('inertiaLocationVisit') || '')\r\n    window.sessionStorage.removeItem('inertiaLocationVisit')\r\n    page.url += window.location.hash\r\n    page.rememberedState = window.history.state?.rememberedState ?? {}\r\n    page.scrollRegions = window.history.state?.scrollRegions ?? []\r\n    this.setPage(page, { preserveScroll: locationVisit.preserveScroll, preserveState: true }).then(() => {\r\n      if (locationVisit.preserveScroll) {\r\n        this.restoreScrollPositions()\r\n      }\r\n      fireNavigateEvent(page)\r\n    })\r\n  }\r\n\r\n  protected isLocationVisitResponse(response: AxiosResponse): boolean {\r\n    return !!(response && response.status === 409 && response.headers['x-inertia-location'])\r\n  }\r\n\r\n  protected isInertiaResponse(response: AxiosResponse): boolean {\r\n    return !!response?.headers['x-inertia']\r\n  }\r\n\r\n  protected createVisitId(): VisitId {\r\n    this.visitId = {}\r\n    return this.visitId\r\n  }\r\n\r\n  protected cancelVisit(\r\n    activeVisit: ActiveVisit,\r\n    { cancelled = false, interrupted = false}: { cancelled?: boolean, interrupted?: boolean },\r\n  ): void {\r\n    if (activeVisit && !activeVisit.completed && !activeVisit.cancelled && !activeVisit.interrupted) {\r\n      activeVisit.cancelToken.cancel()\r\n      activeVisit.onCancel()\r\n      activeVisit.completed = false\r\n      activeVisit.cancelled = cancelled\r\n      activeVisit.interrupted = interrupted\r\n      fireFinishEvent(activeVisit)\r\n      activeVisit.onFinish(activeVisit)\r\n    }\r\n  }\r\n\r\n  protected finishVisit(visit: ActiveVisit): void {\r\n    if (!visit.cancelled && !visit.interrupted) {\r\n      visit.completed = true\r\n      visit.cancelled = false\r\n      visit.interrupted = false\r\n      fireFinishEvent(visit)\r\n      visit.onFinish(visit)\r\n    }\r\n  }\r\n\r\n  protected resolvePreserveOption(value: PreserveStateOption, page: Page): boolean|string {\r\n    if (typeof value === 'function') {\r\n      return value(page)\r\n    } else if (value === 'errors') {\r\n      return Object.keys(page.props.errors || {}).length > 0\r\n    } else {\r\n      return value\r\n    }\r\n  }\r\n\r\n  public visit(href: string|URL, params: VisitParams = {}): void {\r\n    console.log(\"Visiting: \" + href)\r\n    \r\n    const options: Required<VisitParams> = {\r\n      method: Method.GET,\r\n      data: {},\r\n      replace: false,\r\n      preserveScroll: false,\r\n      preserveState: false,\r\n      only: [],\r\n      headers: {},\r\n      errorBag: '',\r\n      forceFormData: false,\r\n      queryStringArrayFormat: 'brackets',\r\n      onCancelToken: () => {},\r\n      onBefore: () => {},\r\n      onStart: () => {},\r\n      onProgress: () => {},\r\n      onFinish: () => {},\r\n      onCancel: () => {},\r\n      onSuccess: () => {},\r\n      onError: () => {},\r\n      ... params,\r\n    }\r\n\r\n    let url = typeof href === 'string' ? hrefToUrl(href) : href\r\n\r\n    const prepared = this.visitOptions ? this.visitOptions(options, url) || options : options;\r\n\r\n    const { method, replace, only, headers, errorBag, forceFormData, queryStringArrayFormat, onCancelToken, onBefore, onStart, onProgress, onFinish, onCancel, onSuccess, onError } = prepared\r\n    let { data, preserveScroll, preserveState } = prepared\r\n\r\n    if ((hasFiles(data) || forceFormData) && !(data instanceof FormData)) {\r\n      data = objectToFormData(data)\r\n    }\r\n\r\n    if (!(data instanceof FormData)) {\r\n      const [_href, _data] = mergeDataIntoQueryString(method, url, data, queryStringArrayFormat)\r\n      url = hrefToUrl(_href)\r\n      data = _data\r\n    }\r\n\r\n    const visit: PendingVisit = {\r\n      url,\r\n      method,\r\n      data,\r\n      replace,\r\n      preserveScroll,\r\n      preserveState,\r\n      only,\r\n      headers,\r\n      errorBag,\r\n      forceFormData,\r\n      queryStringArrayFormat,\r\n      cancelled: false,\r\n      completed: false,\r\n      interrupted: false,\r\n    }\r\n\r\n    if (onBefore(visit) === false || !fireBeforeEvent(visit)) {\r\n      return\r\n    }\r\n\r\n    if (this.activeVisit) {\r\n      this.cancelVisit(this.activeVisit, { interrupted: true })\r\n    }\r\n\r\n    this.saveScrollPositions()\r\n\r\n    const visitId = this.createVisitId()\r\n    this.activeVisit = { ...visit, onCancelToken, onBefore, onStart, onProgress, onFinish, onCancel, onSuccess, onError, queryStringArrayFormat, cancelToken: Axios.CancelToken.source() }\r\n\r\n    onCancelToken({\r\n      cancel: () => {\r\n        if (this.activeVisit) {\r\n          this.cancelVisit(this.activeVisit, { cancelled: true })\r\n        }\r\n      },\r\n    })\r\n\r\n    fireStartEvent(visit)\r\n    onStart(visit)\r\n\r\n    Axios({\r\n      method,\r\n      url: url.pathname,\r\n      data: method === Method.GET ? {} : data,\r\n      params: method === Method.GET ? data : {},\r\n      cancelToken: this.activeVisit.cancelToken.token,\r\n      headers: {\r\n        ...headers,\r\n        Accept: 'text/html, application/xhtml+xml',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'X-Inertia': true,\r\n        ...(only.length ? {\r\n          'X-Inertia-Partial-Component': this.page.component,\r\n          'X-Inertia-Partial-Data': only.join(','),\r\n        } : {}),\r\n        ...(errorBag && errorBag.length ? { 'X-Inertia-Error-Bag': errorBag } : {}),\r\n        ...(this.page.version ? { 'X-Inertia-Version': this.page.version } : {}),\r\n      },\r\n      onUploadProgress: progress => {\r\n        if (data instanceof FormData) {\r\n          progress.percentage = Math.round(progress.loaded / progress.total * 100)\r\n          fireProgressEvent(progress)\r\n          onProgress(progress)\r\n        }\r\n      },\r\n    }).then(response => {\r\n      if (!this.isInertiaResponse(response)) {\r\n        return Promise.reject({ response })\r\n      }\r\n\r\n      const pageResponse: Page = response.data\r\n      if (only.length && pageResponse.component === this.page.component) {\r\n        pageResponse.props = { ...this.page.props, ...pageResponse.props }\r\n      }\r\n      preserveScroll = this.resolvePreserveOption(preserveScroll, pageResponse) as boolean\r\n      preserveState = this.resolvePreserveOption(preserveState, pageResponse)\r\n      if (preserveState && window.history.state?.rememberedState && pageResponse.component === this.page.component) {\r\n        pageResponse.rememberedState = window.history.state.rememberedState\r\n      }\r\n      const requestUrl = url\r\n      const responseUrl = hrefToUrl(pageResponse.url)\r\n      if (requestUrl.hash && !responseUrl.hash && urlWithoutHash(requestUrl).href === responseUrl.href) {\r\n        responseUrl.hash = requestUrl.hash\r\n        pageResponse.url = responseUrl.href\r\n      }\r\n      return this.setPage(pageResponse, { visitId, replace, preserveScroll, preserveState })\r\n    }).then(() => {\r\n      const errors = this.page.props.errors || {}\r\n      if (Object.keys(errors).length > 0) {\r\n        const scopedErrors = errorBag ? (errors[errorBag] ? errors[errorBag] : {}) : errors\r\n        fireErrorEvent(scopedErrors)\r\n        return onError(scopedErrors)\r\n      }\r\n      fireSuccessEvent(this.page)\r\n      return onSuccess(this.page)\r\n    }).catch(error => {\r\n      if (this.isInertiaResponse(error.response)) {\r\n        return this.setPage(error.response.data, { visitId })\r\n      } else if (this.isLocationVisitResponse(error.response)) {\r\n        const locationUrl = hrefToUrl(error.response.headers['x-inertia-location'])\r\n        const requestUrl = url\r\n        if (requestUrl.hash && !locationUrl.hash && urlWithoutHash(requestUrl).href === locationUrl.href) {\r\n          locationUrl.hash = requestUrl.hash\r\n        }\r\n        this.locationVisit(locationUrl, preserveScroll === true)\r\n      } else if (error.response) {\r\n        if (fireInvalidEvent(error.response)) {\r\n          modal.show(error.response.data)\r\n        }\r\n      } else {\r\n        return Promise.reject(error)\r\n      }\r\n    }).then(() => {\r\n      if (this.activeVisit) {\r\n        this.finishVisit(this.activeVisit)\r\n      }\r\n    }).catch(error => {\r\n      if (!Axios.isCancel(error)) {\r\n        const throwException = fireExceptionEvent(error)\r\n        if (this.activeVisit) {\r\n          this.finishVisit(this.activeVisit)\r\n        }\r\n        if (throwException) {\r\n          return Promise.reject(error)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  protected setPage(page: Page, {\r\n    visitId = this.createVisitId(),\r\n    replace = false,\r\n    preserveScroll = false,\r\n    preserveState = false,\r\n  }: {\r\n    visitId?: VisitId,\r\n    replace?: boolean,\r\n    preserveScroll?: PreserveStateOption\r\n    preserveState?: PreserveStateOption\r\n  } = {}): Promise<void> {\r\n    return Promise.resolve(this.resolveComponent(page.component)).then(component => {\r\n      if (visitId === this.visitId) {\r\n        page.scrollRegions = page.scrollRegions || []\r\n        page.rememberedState = page.rememberedState || {}\r\n        replace = replace || hrefToUrl(page.url).href === window.location.href\r\n        replace ? this.replaceState(page) : this.pushState(page)\r\n        this.swapComponent({ component, page, preserveState }).then(() => {\r\n          if (!preserveScroll) {\r\n            this.resetScrollPositions()\r\n          }\r\n          if (!replace) {\r\n            fireNavigateEvent(page)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  protected pushState(page: Page): void {\r\n    this.page = page\r\n    window.history.pushState(page, '', page.url)\r\n  }\r\n\r\n  protected replaceState(page: Page): void {\r\n    this.page = page\r\n    window.history.replaceState(page, '', page.url)\r\n  }\r\n\r\n  protected handlePopstateEvent(event: PopStateEvent): void {\r\n    if (event.state !== null) {\r\n      const page = event.state\r\n      const visitId = this.createVisitId()\r\n      Promise.resolve(this.resolveComponent(page.component)).then(component => {\r\n        if (visitId === this.visitId) {\r\n          this.page = page\r\n          this.swapComponent({ component, page, preserveState: false }).then(() => {\r\n            this.restoreScrollPositions()\r\n            fireNavigateEvent(page)\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      const url = hrefToUrl(this.page.url)\r\n      url.hash = window.location.hash\r\n      this.replaceState({ ...this.page, url: url.href })\r\n      this.resetScrollPositions()\r\n    }\r\n  }\r\n\r\n  public get(url: URL|string, data: RequestPayload = {}, options: Exclude<VisitParams, 'method'|'data'> = {}): void {\r\n    return this.visit(url, { ...options, method: Method.GET, data })\r\n  }\r\n\r\n  public reload(options: Exclude<VisitParams, 'preserveScroll'|'preserveState'> = {}): void {\r\n    return this.visit(window.location.href, { ...options, preserveScroll: true, preserveState: true })\r\n  }\r\n\r\n  public replace(url: URL|string, options: Exclude<VisitParams, 'replace'> = {}): void {\r\n    console.warn(`Inertia.replace() has been deprecated and will be removed in a future release. Please use Inertia.${options.method ?? 'get'}() instead.`)\r\n    return this.visit(url, { preserveState: true, ...options, replace: true })\r\n  }\r\n\r\n  public post(url: URL|string, data: RequestPayload = {}, options: Exclude<VisitParams, 'method'|'data'> = {}): void {\r\n    return this.visit(url, { preserveState: true, ...options, method: Method.POST, data })\r\n  }\r\n\r\n  public put(url: URL|string, data: RequestPayload = {}, options: Exclude<VisitParams, 'method'|'data'> = {}): void {\r\n    return this.visit(url, { preserveState: true, ...options, method: Method.PUT, data })\r\n  }\r\n\r\n  public patch(url: URL|string, data: RequestPayload = {}, options: Exclude<VisitParams, 'method'|'data'> = {}): void {\r\n    return this.visit(url, { preserveState: true, ...options, method: Method.PATCH, data })\r\n  }\r\n\r\n  public delete(url: URL|string, options: Exclude<VisitParams, 'method'> = {}): void {\r\n    return this.visit(url, { preserveState: true, ...options, method: Method.DELETE })\r\n  }\r\n\r\n  public remember(data: unknown, key = 'default'): void {\r\n    if (isServer) {\r\n      return\r\n    }\r\n\r\n    this.replaceState({\r\n      ...this.page,\r\n      rememberedState: {\r\n        ...this.page?.rememberedState,\r\n        [key]: data,\r\n      },\r\n    })\r\n  }\r\n\r\n  public restore(key = 'default'): unknown {\r\n    if (isServer) {\r\n      return\r\n    }\r\n\r\n    return window.history.state?.rememberedState?.[key]\r\n  }\r\n\r\n  public on<TEventName extends GlobalEventNames>(type: TEventName, callback: (event: GlobalEvent<TEventName>) => GlobalEventResult<TEventName>): VoidFunction {\r\n    const listener = ((event: GlobalEvent<TEventName>) => {\r\n      const response = callback(event)\r\n      if (event.cancelable && !event.defaultPrevented && response === false) {\r\n        event.preventDefault()\r\n      }\r\n    }) as EventListener\r\n\r\n    document.addEventListener(`inertia:${type}`, listener)\r\n    return () => document.removeEventListener(`inertia:${type}`, listener)\r\n  }\r\n}\r\n","import { FormDataConvertible, RequestPayload } from './types'\r\n\r\nexport function hasFiles(data: RequestPayload|FormDataConvertible): boolean {\r\n  return (\r\n    data instanceof File ||\r\n    data instanceof Blob ||\r\n    (data instanceof FileList && data.length > 0) ||\r\n    (data instanceof FormData && Array.from(data.values()).some((value) => hasFiles(value))) ||\r\n    (typeof data === 'object' && data !== null && Object.values(data).some((value) => hasFiles(value)))\r\n  )\r\n}\r\n","import debounce from './debounce'\r\n\r\nconst Renderer = {\r\n  buildDOMElement(tag: string): ChildNode {\r\n    const template = document.createElement('template')\r\n    template.innerHTML = tag\r\n    const node = (template.content.firstChild as Element)\r\n\r\n    if (!tag.startsWith('<script ')) {\r\n      return node\r\n    }\r\n\r\n    const script = document.createElement('script')\r\n    script.innerHTML = node.innerHTML\r\n    node.getAttributeNames().forEach(name => {\r\n      script.setAttribute(name, node.getAttribute(name) || '')\r\n    })\r\n\r\n    return script\r\n  },\r\n\r\n  isInertiaManagedElement(element: Element): boolean {\r\n    return element.nodeType === Node.ELEMENT_NODE && element.getAttribute('inertia') !== null\r\n  },\r\n\r\n  findMatchingElementIndex(element: Element, elements: Array<Element>): number {\r\n    const key = element.getAttribute('inertia')\r\n    if (key !== null) {\r\n      return elements.findIndex(element => element.getAttribute('inertia') === key)\r\n    }\r\n\r\n    return -1\r\n  },\r\n\r\n  update: debounce(function (elements: Array<string>) {\r\n    const sourceElements = elements.map(element => this.buildDOMElement(element))\r\n    const targetElements = Array.from(document.head.childNodes).filter(element => this.isInertiaManagedElement(element as Element))\r\n\r\n    targetElements.forEach(targetElement => {\r\n      const index = this.findMatchingElementIndex((targetElement as Element), sourceElements)\r\n      if (index === -1) {\r\n        targetElement?.parentNode?.removeChild(targetElement)\r\n        return\r\n      }\r\n\r\n      const sourceElement = sourceElements.splice(index, 1)[0]\r\n      if (sourceElement && !targetElement.isEqualNode(sourceElement)) {\r\n        targetElement?.parentNode?.replaceChild(sourceElement, targetElement)\r\n      }\r\n    })\r\n\r\n    sourceElements.forEach(element => document.head.appendChild(element))\r\n  }, 1),\r\n}\r\n\r\nexport default function createHeadManager(isServer: boolean, titleCallback: ((title: string) => string), onUpdate: ((elements: string[]) => void)): ({\r\n  forceUpdate: () => void,\r\n  createProvider: () => ({\r\n    update: (elements: string[]) => void,\r\n    disconnect: () => void,\r\n  })\r\n}) {\r\n  const states: Record<string, Array<string>> = {}\r\n  let lastProviderId = 0\r\n\r\n  function connect(): string {\r\n    const id = (lastProviderId += 1)\r\n    states[id] = []\r\n    return id.toString()\r\n  }\r\n\r\n  function disconnect(id: string): void {\r\n    if (id === null || Object.keys(states).indexOf(id) === -1) {\r\n      return\r\n    }\r\n\r\n    delete states[id]\r\n    commit()\r\n  }\r\n\r\n  function update(id: string, elements: Array<string> = []): void {\r\n    if (id !== null && Object.keys(states).indexOf(id) > -1) {\r\n      states[id] = elements\r\n    }\r\n\r\n    commit()\r\n  }\r\n\r\n  function collect(): Array<string> {\r\n    const title = titleCallback('')\r\n\r\n    const defaults: Record<string, string> = {\r\n      ... (title ? { title: `<title inertia=\"\">${title}</title>`} : {}),\r\n    }\r\n\r\n    const elements = Object.values(states)\r\n      .reduce((carry, elements) => carry.concat(elements), [])\r\n      .reduce((carry, element) => {\r\n        if (element.indexOf('<') === -1) {\r\n          return carry\r\n        }\r\n\r\n        if (element.indexOf('<title ') === 0) {\r\n          const title = element.match(/(<title [^>]+>)(.*?)(<\\/title>)/)\r\n          carry.title = title ? `${title[1]}${titleCallback(title[2])}${title[3]}`: element\r\n          return carry\r\n        }\r\n\r\n        const match = element.match(/ inertia=\"[^\"]+\"/)\r\n        if (match) {\r\n          carry[match[0]] = element\r\n        } else {\r\n          carry[Object.keys(carry).length] = element\r\n        }\r\n\r\n        return carry\r\n      }, defaults)\r\n\r\n    return Object.values(elements)\r\n  }\r\n\r\n  function commit(): void {\r\n    isServer ? onUpdate(collect()) : Renderer.update(collect())\r\n  }\r\n\r\n  // By committing during initialization, we can guarantee that the default\r\n  // tags are set, as well as that they exist during SSR itself.\r\n  commit()\r\n\r\n  return {\r\n    forceUpdate: commit,\r\n    createProvider: function () {\r\n      const id = connect()\r\n\r\n      return {\r\n        update: (elements) => update(id, elements),\r\n        disconnect: () => disconnect(id),\r\n      }\r\n    },\r\n  }\r\n}\r\n","import { Router } from './router'\r\n\r\nexport * from './types'\r\n\r\nexport { default as createHeadManager } from './head'\r\nexport { default as shouldIntercept } from './shouldIntercept'\r\nexport { hrefToUrl, mergeDataIntoQueryString, urlWithoutHash } from './url'\r\n\r\nexport const Inertia = new Router()\r\n","export default function shouldIntercept(event: KeyboardEvent): boolean {\r\n  const isLink = (event.currentTarget as HTMLElement).tagName.toLowerCase() === 'a'\r\n  return !(\r\n    (event.target && (event?.target as HTMLElement).isContentEditable) ||\r\n    event.defaultPrevented ||\r\n    (isLink && event.which > 1) ||\r\n    (isLink && event.altKey) ||\r\n    (isLink && event.ctrlKey) ||\r\n    (isLink && event.metaKey) ||\r\n    (isLink && event.shiftKey)\r\n  )\r\n}\r\n"],"names":["Method","modal","listener","show","html","JSON","stringify","page","document","createElement","innerHTML","querySelectorAll","forEach","a","setAttribute","this","style","position","width","height","padding","boxSizing","backgroundColor","zIndex","addEventListener","_this","hide","iframe","borderRadius","appendChild","body","prepend","overflow","contentWindow","Error","open","write","outerHTML","close","hideOnEscape","bind","removeEventListener","event","keyCode","debounce","fn","delay","timeoutID","clearTimeout","setTimeout","apply","objectToFormData","source","form","parentKey","key","FormData","Object","prototype","hasOwnProperty","call","append","composeKey","parent","value","Array","isArray","from","keys","index","toString","Date","toISOString","File","name","Blob","hrefToUrl","href","URL","window","location","mergeDataIntoQueryString","method","data","qsArrayFormat","hasHost","test","hasAbsolutePath","startsWith","hasRelativePath","hasSearch","includes","GET","length","hasHash","url","search","qs","deepmerge","ignoreQueryPrefix","encodeValuesOnly","arrayFormat","protocol","host","pathname","substring","hash","join","urlWithoutHash","fireEvent","options","dispatchEvent","CustomEvent","fireFinishEvent","visit","detail","fireNavigateEvent","Axios","axios","isServer","Router","init","resolveComponent","swapComponent","visitOptions","initialPage","isBackForwardVisit","handleBackForwardVisit","isLocationVisit","handleLocationVisit","handleInitialPageVisit","setupEventListeners","setPage","preserveState","then","handlePopstateEvent","handleScrollEvent","scrollRegions","target","hasAttribute","saveScrollPositions","replaceState","map","region","top","scrollTop","left","scrollLeft","resetScrollPositions","documentElement","getElementById","slice","scrollIntoView","restoreScrollPositions","scrollPosition","history","state","performance","getEntriesByType","type","version","preserveScroll","_this2","locationVisit","sessionStorage","setItem","reload","error","getItem","parse","removeItem","rememberedState","_window$history$state2","_window$history$state4","_this3","isLocationVisitResponse","response","status","headers","isInertiaResponse","createVisitId","visitId","cancelVisit","activeVisit","cancelled","interrupted","completed","cancelToken","cancel","onCancel","onFinish","finishVisit","resolvePreserveOption","props","errors","params","console","log","replace","only","errorBag","forceFormData","queryStringArrayFormat","onCancelToken","onBefore","onStart","onProgress","onSuccess","onError","prepared","hasFiles","FileList","values","some","_data","cancelable","fireBeforeEvent","CancelToken","_this4","fireStartEvent","token","Accept","X-Requested-With","X-Inertia","X-Inertia-Partial-Component","component","X-Inertia-Partial-Data","X-Inertia-Error-Bag","X-Inertia-Version","onUploadProgress","progress","percentage","Math","round","loaded","total","fireProgressEvent","Promise","reject","pageResponse","_window$history$state5","requestUrl","responseUrl","scopedErrors","fireErrorEvent","locationUrl","isCancel","throwException","exception","resolve","_this5","pushState","_this6","get","warn","post","POST","put","PUT","patch","PATCH","DELETE","remember","_this$page","restore","_window$history$state6","_window$history$state7","on","callback","defaultPrevented","preventDefault","Renderer","buildDOMElement","tag","template","node","content","firstChild","script","getAttributeNames","getAttribute","isInertiaManagedElement","element","nodeType","Node","ELEMENT_NODE","findMatchingElementIndex","elements","findIndex","update","sourceElements","head","childNodes","filter","targetElement","sourceElement","splice","isEqualNode","parentNode","replaceChild","removeChild","Inertia","titleCallback","onUpdate","states","lastProviderId","collect","title","defaults","reduce","carry","concat","indexOf","match","commit","forceUpdate","createProvider","id","connect","disconnect","isLink","currentTarget","tagName","toLowerCase","isContentEditable","which","altKey","ctrlKey","metaKey","shiftKey"],"mappings":"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"}